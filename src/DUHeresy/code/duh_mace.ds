//DS---------------------------------------------------------------------------
//
// Copyright(C) 2012 David Hill
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, see <http://www.gnu.org/licenses/>.
//
//-----------------------------------------------------------------------------
//
// Firemace functions.
//
//-----------------------------------------------------------------------------

#include "duh_arti.dh"

#include "du_defs.dh"


//----------------------------------------------------------------------------|
// Global Functions                                                           |
//

//
// DUH_FiremaceAltFire
//
__extscript "ACS" DUH_FiremaceAltFire(bool useammo)
{
   int ammo_count = CheckInventory(DUHfiremaceAmmo);
   int ammo_usage = (ammo_count / 75) + 1;
   int damage = (ammo_count / 25) + ammo_usage + 7;

   int tid;

   tid = DU_FireMissile(ActivatorTID(), "DUH_FiremaceMissile4", damage,
                        GetActorAngle(0), GetActorPitch(0), 25);

   GiveActorInventory(tid, "DUH_MemberShooterTID", ActivatorTID());

   if (useammo)
      TakeInventory(DUHfiremaceAmmo, ammo_usage);
};

//
// DUH_FiremaceDeathRing
//
__extscript "ACS" DUH_FiremaceDeathRing()
{
   int damage = (GetActorProperty(0, APROP_Damage) + 7) / 2;
   int shooter = CheckInventory("DUH_MemberShooterTID");

   int i;
   int j;

   for (i = damage; i--;) for (j = damage; j--;)
   {
      fixed angle = (fixed)i / damage;
      fixed pitch = (fixed)j / damage;

      DU_FireMissile(shooter, "DUH_FiremaceMissile5", 1, angle, pitch, 15);
   };
};

//
// DUH_FiremaceMissileSound
//
__extscript "ACS" DUH_FiremaceMissileSound()
{
   SetActorPropertyString(0, APROP_SeeSound, "weapons/macebounce");
};

//
// DUH_FiremaceReady
//
__extscript "ACS" DUH_FiremaceReady(int frames)
{
   static int[MAX_PLAYERS] tics;

   DUH_WeaponReady(frames, tics, DUHfiremaceAmmo, 20);
};

// EOF

