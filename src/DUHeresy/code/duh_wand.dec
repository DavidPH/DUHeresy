//-----------------------------------------------------------------------------
//
// Copyright(C) 2012 David Hill
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, see <http://www.gnu.org/licenses/>.
//
//-----------------------------------------------------------------------------
//
// Elven Wand actors.
//
//-----------------------------------------------------------------------------


//----------------------------------------------------------------------------|
// Types                                                                      |
//

//
// DUH_ElvenLaserTrail
//
actor DUH_ElvenLaserTrail : MageWandSmoke
{
   Alpha 0.125
   RenderStyle Translucent

   +CLIENTSIDEONLY

   states
   {
   Spawn:
      PUF2 ABCDE 3
      stop
   }
}

//
// DUH_ElvenLaser
//
// "Firin' mah Elven LAZOOOOR!"
//
actor DUH_ElvenLaser : FastProjectile
{
   Damage 1
   Height 4
   Radius 5
   Speed 256

   +SKYEXPLODE
   +PAINLESS

   states
   {
   Spawn:
      TNT1 A 0
      TNT1 A 1 ACS_ExecuteAlways(DUH_ElvenLaserTrailSpawn,0, false)
   Idle:
      PUF2 A 1 bright ACS_ExecuteAlways(DUH_ElvenLaserTrailSpawn,0, false)
      goto Idle

   Death:
      TNT1 A 1 ACS_ExecuteAlways(DUH_ElvenLaserTrailSpawn,0, true)
      PUF2 ABCDE 3 bright
      stop

   DeathSky:
      TNT1 A 1
      stop
   }
}

//
// DUH_ElvenLaserRipper
//
actor DUH_ElvenLaserRipper : DUH_ElvenLaser
{
   +RIPPER
}

//
// DUH_ElvenWand
//
actor DUH_ElvenWand : GoldWand replaces GoldWand
{
   Weapon.AmmoUse 0
   Weapon.SisterWeapon "DUH_ElvenWandPowered"

   states
   {
   Ready:
      GWND A 1 A_WeaponReady
      TNT1 A 0 ACS_ExecuteAlways(DUH_ElvenWandReady,0, 1)
      goto Ready

   Fire:
      GWND B 9
   Hold:
      TNT1 A 0 A_PlaySound("weapons/wandhit")
      TNT1 A 0 A_Light(1)
      GWND C 3 ACS_ExecuteAlways(DUH_ElvenWandFire,0, false)
      TNT1 A 0 A_Light(2)
      GWND C 3 ACS_ExecuteAlways(DUH_ElvenWandFire,0, false)
      TNT1 A 0 A_Light(3)
      GWND C 3 ACS_ExecuteAlways(DUH_ElvenWandFire,0, true)
      TNT1 A 0 A_Light(2)
      GWND C 3 ACS_ExecuteAlways(DUH_ElvenWandFire,0, false)
      GWND D 9 A_ReFire
      GWND A 9 A_Light0
      goto Ready

   AltFire:
      GWND B 3
      TNT1 A 0 A_PlaySound("weapons/wandhit")
      GWND C 6 A_FireBullets(1.0, 1.0, -1, ACS_ExecuteWithResult(DUH_ElvenWandDamage, true), "GoldWandPuff1")
      GWND D 3
      TNT1 A 0 A_ReFire
      goto Ready
   }
}

//
// DUH_ElvenWandPowered
//
actor DUH_ElvenWandPowered : DUH_ElvenWand replaces GoldWandPowered
{
   Weapon.AmmoGive 0
   Weapon.SisterWeapon "DUH_ElvenWand"

   +WEAPON.POWERED_UP

   states
   {
   Fire:
      GWND B 2
   Hold:
      TNT1 A 0 ACS_ExecuteAlways(DUH_ElvenWandReady,0, 8)
      TNT1 A 0 A_PlaySound("weapons/wandhit")
      TNT1 A 0 A_Light(1)
      GWND C 2 ACS_ExecuteAlways(DUH_ElvenWandFire,0, true)
      TNT1 A 0 A_Light(2)
      GWND C 2 ACS_ExecuteAlways(DUH_ElvenWandFire,0, true)
      TNT1 A 0 A_Light(3)
      GWND C 2 ACS_ExecuteAlways(DUH_ElvenWandFire,0, true)
      TNT1 A 0 A_Light(2)
      GWND C 2 ACS_ExecuteAlways(DUH_ElvenWandFire,0, true)
      GWND D 2 A_ReFire
      GWND A 2 A_Light0
      goto Ready

   AltFire:
      GWND B 3
      TNT1 A 0 A_PlaySound("weapons/wandhit")
      GWND C 6 A_FireBullets(1.0, 1.0, -1, ACS_ExecuteWithResult(DUH_ElvenWandDamage, false), "GoldWandPuff1")
      GWND D 3
      TNT1 A 0 A_ReFire
      goto Ready
   }
}

// EOF

