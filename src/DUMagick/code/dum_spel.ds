//DS---------------------------------------------------------------------------
//
// Copyright(C) 2012 David Hill
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, see <http://www.gnu.org/licenses/>.
//
//-----------------------------------------------------------------------------
//
// Spell functions and data.
//
//-----------------------------------------------------------------------------

#include "dum_spel.dh"


//----------------------------------------------------------------------------|
// Global Variables                                                           |
//

__variable static SpellData *[MAX_PLAYERS] DUMspellSelect;

//
// DUMspellBasic
//
__extvar static SpellData DUMspellBasic =
{
   "BASIC";
   __script(SpellData const *spell)
   {
      DU_FireMissile(ActivatorTID(), "DUM_BasicBolt", 3,
                     GetActorAngle(0), GetActorPitch(0), 15);
   };
   nullptr;
   nullptr;

   &DUMspellSpread;
   &DUMspellCircle;
   &DUMspellBurst;
   &DUMspellBurst;
};

//
// DUMspellBurst
//
__extvar static SpellData DUMspellBurst =
{
   "BURST";
   __script(SpellData const *spell)
   {
      DU_FireMissile(ActivatorTID(), "DUM_BasicBolt", 3,
                     GetActorAngle(0), GetActorPitch(0), 15);
      Delay(3);
      DU_FireMissile(ActivatorTID(), "DUM_BasicBolt", 3,
                     GetActorAngle(0), GetActorPitch(0), 15);
      Delay(3);
      DU_FireMissile(ActivatorTID(), "DUM_BasicBolt", 3,
                     GetActorAngle(0), GetActorPitch(0), 15);
   };
   nullptr;
   nullptr;

   &DUMspellStream;
   &DUMspellStream;
   &DUMspellBurst;
   &DUMspellBurst;
};

//
// DUMspellCircle
//
__extvar static SpellData DUMspellCircle =
{
   "CIRCLE";
   __script(SpellData const *spell)
   {
      DU_FireMissile(ActivatorTID(), "DUM_BasicBolt", 3,
                     GetActorAngle(0) + 0.000, GetActorPitch(0), 15);
      DU_FireMissile(ActivatorTID(), "DUM_BasicBolt", 3,
                     GetActorAngle(0) + 0.125, GetActorPitch(0), 15);
      DU_FireMissile(ActivatorTID(), "DUM_BasicBolt", 3,
                     GetActorAngle(0) + 0.250, GetActorPitch(0), 15);
      DU_FireMissile(ActivatorTID(), "DUM_BasicBolt", 3,
                     GetActorAngle(0) + 0.375, GetActorPitch(0), 15);
      DU_FireMissile(ActivatorTID(), "DUM_BasicBolt", 3,
                     GetActorAngle(0) + 0.500, GetActorPitch(0), 15);
      DU_FireMissile(ActivatorTID(), "DUM_BasicBolt", 3,
                     GetActorAngle(0) + 0.625, GetActorPitch(0), 15);
      DU_FireMissile(ActivatorTID(), "DUM_BasicBolt", 3,
                     GetActorAngle(0) + 0.750, GetActorPitch(0), 15);
      DU_FireMissile(ActivatorTID(), "DUM_BasicBolt", 3,
                     GetActorAngle(0) + 0.875, GetActorPitch(0), 15);
   };
   nullptr;
   nullptr;

   &DUMspellCircle;
   &DUMspellCircle;
   &DUMspellCircle;
   &DUMspellCircle;
};

//
// DUMspellSpread
//
__extvar static SpellData DUMspellSpread =
{
   "SPREAD";
   __script(SpellData const *spell)
   {
      DU_FireMissile(ActivatorTID(), "DUM_BasicBolt", 3,
                     GetActorAngle(0), GetActorPitch(0), 15);
      DU_FireMissile(ActivatorTID(), "DUM_BasicBolt", 3,
                     GetActorAngle(0) + 1.0/16.0, GetActorPitch(0), 15);
      DU_FireMissile(ActivatorTID(), "DUM_BasicBolt", 3,
                     GetActorAngle(0) - 1.0/16.0, GetActorPitch(0), 15);
   };
   nullptr;
   nullptr;

   &DUMspellSpread;
   &DUMspellSpread;
   &DUMspellSpread;
   &DUMspellSpread;
};

//
// DUMspellStream
//
__extvar static SpellData DUMspellStream =
{
   "STREAM";
   __script(SpellData const *spell)
   {
      int i = 15;

      while (i-- && (GetPlayerInput(-1, INPUT_BUTTONS) & BT_USER2))
      {
         DU_FireMissile(ActivatorTID(), "DUM_BasicBolt", 3,
                     GetActorAngle(0), GetActorPitch(0), 15);
         Delay(2);
      };
   };
   nullptr;
   nullptr;

   &DUMspellStream;
   &DUMspellStream;
   &DUMspellStream;
   &DUMspellStream;
};


//----------------------------------------------------------------------------|
// Global Functions                                                           |
//

//
// DUM_SpellMenu
//
function DUM_SpellMenu(int buttons)
{
   SpellData **spell = &DUMspellSelect[PlayerNumber()];

   if(buttons & BT_FORWARD)
   {
      *spell = (*spell)->up;
      if((*spell)->funcSelect)
         (*spell)->funcSelect(*spell);
   };

   if(buttons & BT_BACK)
   {
      *spell = (*spell)->down;
      if((*spell)->funcSelect)
         (*spell)->funcSelect(*spell);
   };

   if(buttons & (BT_LEFT|BT_MOVELEFT))
   {
      *spell = (*spell)->left;
      if((*spell)->funcSelect)
         (*spell)->funcSelect(*spell);
   };

   if(buttons & (BT_RIGHT|BT_MOVERIGHT))
   {
      *spell = (*spell)->right;
      if((*spell)->funcSelect)
         (*spell)->funcSelect(*spell);
   };

   __printf("%s\n|\n%s -- %s -- %s\n|\n%s",
                            (*spell)->up->name,
      (*spell)->left->name, (*spell)->name, (*spell)->right->name,
                            (*spell)->down->name);
};

// EOF

