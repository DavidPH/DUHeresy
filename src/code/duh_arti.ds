//-----------------------------------------------------------------------------
//
// Copyright(C) 2012 David Hill
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, see <http://www.gnu.org/licenses/>.
//
//-----------------------------------------------------------------------------
//
// Artifact functions.
//
//-----------------------------------------------------------------------------

[
#include "duh_defs.dh"


//----------------------------------------------------------------------------|
// Static Functions                                                           |
//

//
// DUH_artifactTomeReady
//
__function DUH_artifactTomeReady(str ammo, int cap)
{
   __variable __autoreg int count;

   SetAmmoCapacity(ammo,  cap);
   count = CheckInventory(ammo);
   TakeInventory(ammo, count);
   GiveInventory(ammo, count);
};


//----------------------------------------------------------------------------|
// Global Functions                                                           |
//

//
// DUH_ChickenFriendCountdown
//
script DUH_ChickenFriendCountdown(int frames)
{
   GiveInventory("DUH_ChickenFriendCounter", frames);

   while (CheckInventory("DUH_ChickenFriendCounter") >= 35)
   {
      TakeInventory("DUH_ChickenFriendCounter", 35);
      DamageThing(1, 0);
   };
};

//
// DUH_ArtifactReady
//
script DUH_ArtifactReady(int frames)
{
   __variable static __array int[MAX_PLAYERS] tics;

   while (frames--)
   {
      __variable __autoreg int tic = ++tics[PlayerNumber()];
      __variable __autoreg int inv_count;

      __variable __autoreg int tid = ActivatorTID();

      if (!tid) Thing_ChangeTID(0, tid = DUH_MakeTID());

      inv_count = CheckInventory("ArtiEgg");
      if (inv_count && !(tic % ((35 * 256) / inv_count)))
         SpawnForced("DUH_ChickenFriend", GetActorX(0), GetActorY(0),
                     GetActorZ(0), 0, GetActorAngle(0)*256);

      inv_count = CheckInventory("ArtiFly");
      SetActorPropertyFixed(0, APROP_JumpZ, inv_count + 8.0);

      inv_count = CheckInventory("ArtiHealth");
      if (inv_count && !(tic % ((35 * 4) / inv_count)))
         HealThing(1);

      inv_count = CheckInventory("ArtiInvisibility");
      if (inv_count && !(tic % ((35 * 1) / inv_count)))
         GiveInventory("DUH_ArmorBonus", 8);

      inv_count = CheckInventory("ArtiInvulnerability");
      if (inv_count && !(tic % ((35 * 1) / inv_count)))
         GiveInventory("DUH_ArmorBonus", 1);

      inv_count = CheckInventory("ArtiSuperHealth") + 4;
      SetActorProperty(0, APROP_SpawnHealth, inv_count * 25);

      inv_count = CheckInventory("ArtiTeleport");
      SetActorPropertyFixed(0, APROP_Speed, (inv_count / 10.0) + 1.0);

      inv_count = CheckInventory("ArtiTimeBomb");
      if (inv_count && !(tic % ((35 * 16) / inv_count)))
         SpawnProjectile(tid, "DUH_TimeBombAura", 0, 0, 0, 0, 0);

      inv_count = CheckInventory("ArtiTomeOfPower") + 4;
      DUH_artifactTomeReady(DUHelvenWandAmmo,  inv_count *  50);
      DUH_artifactTomeReady(DUHcrossbowAmmo,   inv_count *  25);
      DUH_artifactTomeReady(DUHdragonClawAmmo, inv_count * 100);
      DUH_artifactTomeReady(DUHhellstaffAmmo,  inv_count * 100);
      DUH_artifactTomeReady(DUHphoenixRodAmmo, inv_count *  10);
      DUH_artifactTomeReady(DUHfiremaceAmmo,   inv_count *  75);

      inv_count = CheckInventory("ArtiTorch");
      if (inv_count && !(tic % ((35 * 64) / inv_count)))
         GiveInventory("ArtiTorch", 1);

      if (frames) Delay(1);
   };
};

]
// EOF

